#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require './dbmanager_types'

module Actions
  class Client
    include ::Thrift::Client

    def capturar_doctor(doctor)
      send_capturar_doctor(doctor)
      return recv_capturar_doctor()
    end

    def send_capturar_doctor(doctor)
      send_message('capturar_doctor', Capturar_doctor_args, :doctor => doctor)
    end

    def recv_capturar_doctor()
      result = receive_message(Capturar_doctor_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'capturar_doctor failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_capturar_doctor(seqid, iprot, oprot)
      args = read_args(iprot, Capturar_doctor_args)
      result = Capturar_doctor_result.new()
      result.success = @handler.capturar_doctor(args.doctor)
      write_result(result, oprot, 'capturar_doctor', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Capturar_doctor_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOCTOR = 1

    FIELDS = {
      DOCTOR => {:type => ::Thrift::Types::STRUCT, :name => 'doctor', :class => ::Doctor}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Capturar_doctor_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

